# docker compose file to build all components of the albumartdb service

version: "3.2"
services:

  mongo:
    image: mongo
    container_name: ${MONGO_CONTAINER_NAME}
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}

  mongo-express:
    image: mongo-express
    container_name: mongo-express-container
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USER}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD}

  art-aggregator:
    image: albumartdb/art-aggregator:latest
    container_name: art-aggregator-container
    restart: always
    ports:
      - 5000:5000
    volumes:
      - type: bind
        source: $PWD/bind
        target: /bind

  frontend:
    image: albumartdb/frontend:latest
    container_name: frontend-container
    restart: always
    ports:
      - 3000:3000
    volumes:
      - type: bind
        source: $PWD/bind
        target: /bind

  kibana:
    image: docker.elastic.co/kibana/kibana:7.13.1
    container_name: kibana-container
    restart: always
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.1
    container_name: elasticsearch-container
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - discovery.type=single-node
#    volumes:
#      - data01:/usr/share/elasticsearch/data
